When would you want to use a remote repository rather than keeping all your work local?

If you are working collaboratively, it is helpful to save projects on GitHub, where multiple people can easily access
and change files. Also, even if working by yourself, GitHub adds a layer of protection to saving, and lets you 
reach your files on multiple computers (say if you work at home and work).

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Others might make changes to a remote, or you may have changes that you aren't ready to share yet

Describe the differences between forks, clones, and branches. When would you use one instead of another? 

Forks - when you want to edit/start from someone else's existing github repo

Clones - when you want to edit a repo on github on a local machine

Branches - when you want to start new edits to a feature or bug without disrupting your own master

What is the benefit of having a copy of the last known state of the remote stored locally?

A copy of the remote state makes it easier to merge because you have something
to compare local changes and remote changes with to make the merge decisions

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git version control, you would have to highlight all changes in each version. 
Then you would need to share them manually with others and ask them to use that version. 
If they had made any edits, you again would have to manually find each different and update. 
It would be tedious.

On the other hand, you need to know how to properly navigate GitHub for this to work, including the etiquette of not changing thigns for others. 
When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?

You'd want to use a separate branch when you're not sure if the change will be accepted or correct. 
You can work independently on your change and try to get it right, and then share it with other collaborators.
This allows for more conversation and edits without disrupting the master.
It does take more steps to incorporate and make sure all versions are up to date though. 